syntax = "proto3";
package argon.config;

option go_package = "argon.github.io/ingress/internal/gen/argonpb;argonpb";

message WatchRequest {
  string node_id = 1;               //
}

message Endpoint {
  string address = 1;
  int32  port    = 2;
  int32  weight  = 3;
  string zone    = 4;
  string region  = 5;
}

message HeaderRewrite {
  string name  = 1;
  string mode  = 2;
  string value = 3;
}

message Cluster {
  string name     = 1;
  string lb_policy = 2;              // "RoundRobin"...
  repeated Endpoint endpoints = 3;
  int32 timeout_ms = 4;
  int32 retries    = 5;
  string backend_protocol =6;
  repeated HeaderRewrite request_headers = 7;
  // If true, the dataplane will not verify the backend's TLS certificate
  // (insecure: accepts self-signed/expired certificates). Defaults to false.
  bool backend_tls_insecure_skip_verify = 8;
  AuthConfig auth = 9;               // External auth (e.g., oauth2-proxy)
}

message Route {
  string host     = 1;
  string path     = 2;
  string path_type = 3;              // "Prefix","Exact"
  string cluster   = 4;
  int32  priority  = 5;
}

message ServerTlsBundle {
  string name   = 1;                 // uniq name bundle "<ns>/<secret>")
  repeated string sni = 2;           // SNI-hosts (from ingress.spec.tls.hosts)
  bytes cert_pem = 3;                // chain (PEM)
  bytes key_pem  = 4;                // PKCS#8 PEM
  int64 not_after_unix = 5;          //
  string version = 6;                // sha256(cert||key)
}

message Snapshot {
  string version            = 1;
  string controller_id      = 2;
  string ingress_class_name = 3;
  int64  generated_at_unix_sec = 4;
  map<string,string> resource_versions = 10;
  repeated Route routes   = 20;
  repeated Cluster clusters = 21;
  repeated ServerTlsBundle server_tls = 30;
}

message AuthConfig {
  string url = 1;
  string signin = 2;
  repeated string response_headers = 3;
  repeated string skip_paths = 4;
  string cookie_name = 5;
}

service ConfigDiscovery {
  rpc Watch (WatchRequest) returns (stream Snapshot);
}

// https://stackoverflow.com/questions/57700860/error-protoc-gen-go-program-not-found-or-is-not-executable
