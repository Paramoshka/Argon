// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v3.21.12
// source: argon/config.proto

package argonpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"` //
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchRequest) Reset() {
	*x = WatchRequest{}
	mi := &file_argon_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchRequest) ProtoMessage() {}

func (x *WatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_argon_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchRequest.ProtoReflect.Descriptor instead.
func (*WatchRequest) Descriptor() ([]byte, []int) {
	return file_argon_config_proto_rawDescGZIP(), []int{0}
}

func (x *WatchRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type Endpoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Port          int32                  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Weight        int32                  `protobuf:"varint,3,opt,name=weight,proto3" json:"weight,omitempty"`
	Zone          string                 `protobuf:"bytes,4,opt,name=zone,proto3" json:"zone,omitempty"`
	Region        string                 `protobuf:"bytes,5,opt,name=region,proto3" json:"region,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Endpoint) Reset() {
	*x = Endpoint{}
	mi := &file_argon_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Endpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Endpoint) ProtoMessage() {}

func (x *Endpoint) ProtoReflect() protoreflect.Message {
	mi := &file_argon_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Endpoint.ProtoReflect.Descriptor instead.
func (*Endpoint) Descriptor() ([]byte, []int) {
	return file_argon_config_proto_rawDescGZIP(), []int{1}
}

func (x *Endpoint) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Endpoint) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Endpoint) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Endpoint) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *Endpoint) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type Cluster struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	LbPolicy      string                 `protobuf:"bytes,2,opt,name=lb_policy,json=lbPolicy,proto3" json:"lb_policy,omitempty"` // "RoundRobin"...
	Endpoints     []*Endpoint            `protobuf:"bytes,3,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	TimeoutMs     int32                  `protobuf:"varint,4,opt,name=timeout_ms,json=timeoutMs,proto3" json:"timeout_ms,omitempty"`
	Retries       int32                  `protobuf:"varint,5,opt,name=retries,proto3" json:"retries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Cluster) Reset() {
	*x = Cluster{}
	mi := &file_argon_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Cluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cluster) ProtoMessage() {}

func (x *Cluster) ProtoReflect() protoreflect.Message {
	mi := &file_argon_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cluster.ProtoReflect.Descriptor instead.
func (*Cluster) Descriptor() ([]byte, []int) {
	return file_argon_config_proto_rawDescGZIP(), []int{2}
}

func (x *Cluster) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Cluster) GetLbPolicy() string {
	if x != nil {
		return x.LbPolicy
	}
	return ""
}

func (x *Cluster) GetEndpoints() []*Endpoint {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *Cluster) GetTimeoutMs() int32 {
	if x != nil {
		return x.TimeoutMs
	}
	return 0
}

func (x *Cluster) GetRetries() int32 {
	if x != nil {
		return x.Retries
	}
	return 0
}

type Route struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Host          string                 `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	PathType      string                 `protobuf:"bytes,3,opt,name=path_type,json=pathType,proto3" json:"path_type,omitempty"` // "Prefix","Exact"
	Cluster       string                 `protobuf:"bytes,4,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Priority      int32                  `protobuf:"varint,5,opt,name=priority,proto3" json:"priority,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Route) Reset() {
	*x = Route{}
	mi := &file_argon_config_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Route) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Route) ProtoMessage() {}

func (x *Route) ProtoReflect() protoreflect.Message {
	mi := &file_argon_config_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Route.ProtoReflect.Descriptor instead.
func (*Route) Descriptor() ([]byte, []int) {
	return file_argon_config_proto_rawDescGZIP(), []int{3}
}

func (x *Route) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Route) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Route) GetPathType() string {
	if x != nil {
		return x.PathType
	}
	return ""
}

func (x *Route) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *Route) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type Snapshot struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Version            string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	ControllerId       string                 `protobuf:"bytes,2,opt,name=controller_id,json=controllerId,proto3" json:"controller_id,omitempty"`
	IngressClassName   string                 `protobuf:"bytes,3,opt,name=ingress_class_name,json=ingressClassName,proto3" json:"ingress_class_name,omitempty"`
	GeneratedAtUnixSec int64                  `protobuf:"varint,4,opt,name=generated_at_unix_sec,json=generatedAtUnixSec,proto3" json:"generated_at_unix_sec,omitempty"`
	ResourceVersions   map[string]string      `protobuf:"bytes,10,rep,name=resource_versions,json=resourceVersions,proto3" json:"resource_versions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Routes             []*Route               `protobuf:"bytes,20,rep,name=routes,proto3" json:"routes,omitempty"`
	Clusters           []*Cluster             `protobuf:"bytes,21,rep,name=clusters,proto3" json:"clusters,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Snapshot) Reset() {
	*x = Snapshot{}
	mi := &file_argon_config_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Snapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Snapshot) ProtoMessage() {}

func (x *Snapshot) ProtoReflect() protoreflect.Message {
	mi := &file_argon_config_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Snapshot.ProtoReflect.Descriptor instead.
func (*Snapshot) Descriptor() ([]byte, []int) {
	return file_argon_config_proto_rawDescGZIP(), []int{4}
}

func (x *Snapshot) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Snapshot) GetControllerId() string {
	if x != nil {
		return x.ControllerId
	}
	return ""
}

func (x *Snapshot) GetIngressClassName() string {
	if x != nil {
		return x.IngressClassName
	}
	return ""
}

func (x *Snapshot) GetGeneratedAtUnixSec() int64 {
	if x != nil {
		return x.GeneratedAtUnixSec
	}
	return 0
}

func (x *Snapshot) GetResourceVersions() map[string]string {
	if x != nil {
		return x.ResourceVersions
	}
	return nil
}

func (x *Snapshot) GetRoutes() []*Route {
	if x != nil {
		return x.Routes
	}
	return nil
}

func (x *Snapshot) GetClusters() []*Cluster {
	if x != nil {
		return x.Clusters
	}
	return nil
}

var File_argon_config_proto protoreflect.FileDescriptor

const file_argon_config_proto_rawDesc = "" +
	"\n" +
	"\x12argon/config.proto\x12\fargon.config\"'\n" +
	"\fWatchRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\"|\n" +
	"\bEndpoint\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x05R\x04port\x12\x16\n" +
	"\x06weight\x18\x03 \x01(\x05R\x06weight\x12\x12\n" +
	"\x04zone\x18\x04 \x01(\tR\x04zone\x12\x16\n" +
	"\x06region\x18\x05 \x01(\tR\x06region\"\xa9\x01\n" +
	"\aCluster\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1b\n" +
	"\tlb_policy\x18\x02 \x01(\tR\blbPolicy\x124\n" +
	"\tendpoints\x18\x03 \x03(\v2\x16.argon.config.EndpointR\tendpoints\x12\x1d\n" +
	"\n" +
	"timeout_ms\x18\x04 \x01(\x05R\ttimeoutMs\x12\x18\n" +
	"\aretries\x18\x05 \x01(\x05R\aretries\"\x82\x01\n" +
	"\x05Route\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12\x1b\n" +
	"\tpath_type\x18\x03 \x01(\tR\bpathType\x12\x18\n" +
	"\acluster\x18\x04 \x01(\tR\acluster\x12\x1a\n" +
	"\bpriority\x18\x05 \x01(\x05R\bpriority\"\xaa\x03\n" +
	"\bSnapshot\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12#\n" +
	"\rcontroller_id\x18\x02 \x01(\tR\fcontrollerId\x12,\n" +
	"\x12ingress_class_name\x18\x03 \x01(\tR\x10ingressClassName\x121\n" +
	"\x15generated_at_unix_sec\x18\x04 \x01(\x03R\x12generatedAtUnixSec\x12Y\n" +
	"\x11resource_versions\x18\n" +
	" \x03(\v2,.argon.config.Snapshot.ResourceVersionsEntryR\x10resourceVersions\x12+\n" +
	"\x06routes\x18\x14 \x03(\v2\x13.argon.config.RouteR\x06routes\x121\n" +
	"\bclusters\x18\x15 \x03(\v2\x15.argon.config.ClusterR\bclusters\x1aC\n" +
	"\x15ResourceVersionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012P\n" +
	"\x0fConfigDiscovery\x12=\n" +
	"\x05Watch\x12\x1a.argon.config.WatchRequest\x1a\x16.argon.config.Snapshot0\x01B6Z4argon.github.io/ingress/internal/gen/argonpb;argonpbb\x06proto3"

var (
	file_argon_config_proto_rawDescOnce sync.Once
	file_argon_config_proto_rawDescData []byte
)

func file_argon_config_proto_rawDescGZIP() []byte {
	file_argon_config_proto_rawDescOnce.Do(func() {
		file_argon_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_argon_config_proto_rawDesc), len(file_argon_config_proto_rawDesc)))
	})
	return file_argon_config_proto_rawDescData
}

var file_argon_config_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_argon_config_proto_goTypes = []any{
	(*WatchRequest)(nil), // 0: argon.config.WatchRequest
	(*Endpoint)(nil),     // 1: argon.config.Endpoint
	(*Cluster)(nil),      // 2: argon.config.Cluster
	(*Route)(nil),        // 3: argon.config.Route
	(*Snapshot)(nil),     // 4: argon.config.Snapshot
	nil,                  // 5: argon.config.Snapshot.ResourceVersionsEntry
}
var file_argon_config_proto_depIdxs = []int32{
	1, // 0: argon.config.Cluster.endpoints:type_name -> argon.config.Endpoint
	5, // 1: argon.config.Snapshot.resource_versions:type_name -> argon.config.Snapshot.ResourceVersionsEntry
	3, // 2: argon.config.Snapshot.routes:type_name -> argon.config.Route
	2, // 3: argon.config.Snapshot.clusters:type_name -> argon.config.Cluster
	0, // 4: argon.config.ConfigDiscovery.Watch:input_type -> argon.config.WatchRequest
	4, // 5: argon.config.ConfigDiscovery.Watch:output_type -> argon.config.Snapshot
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_argon_config_proto_init() }
func file_argon_config_proto_init() {
	if File_argon_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_argon_config_proto_rawDesc), len(file_argon_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_argon_config_proto_goTypes,
		DependencyIndexes: file_argon_config_proto_depIdxs,
		MessageInfos:      file_argon_config_proto_msgTypes,
	}.Build()
	File_argon_config_proto = out.File
	file_argon_config_proto_goTypes = nil
	file_argon_config_proto_depIdxs = nil
}
