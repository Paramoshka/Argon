apiVersion: v1
kind: Namespace
metadata:
  name: oauth
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dex
  namespace: oauth
data:
  config.yaml: |
    # Public issuer URL used in browser redirects. Expose Dex via Ingress at dex.local
    issuer: http://dex.local:8080/dex
    storage:
      type: memory
    web:
      http: 0.0.0.0:5556
    telemetry:
      http: 0.0.0.0:5558

    enablePasswordDB: true

    staticClients:
    - id: oauth2-proxy
      name: OAuth2 Proxy
      secret: oauth2-proxy-secret
      redirectURIs:
      - http://echo.local/oauth2/callback

    staticPasswords:
    - email: user@example.com
      # Replace this hash with the one you generated (bcrypt $2a$...)
      # Example: $2a$10$... (for password "password")
      hash: REPLACE_BCRYPT_HASH
      username: user
      userID: "12345"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dex
  namespace: oauth
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dex
  template:
    metadata:
      labels:
        app: dex
    spec:
      containers:
      - name: dex
        image: ghcr.io/dexidp/dex:v2.38.0
        imagePullPolicy: IfNotPresent
        command:
          - "/usr/local/bin/dex"
          - "serve"
          - "/etc/dex/cfg/config.yaml"
        ports:
          - name: http
            containerPort: 5556
        volumeMounts:
          - name: config
            mountPath: /etc/dex/cfg
      volumes:
        - name: config
          configMap:
            name: dex
            items:
              - key: config.yaml
                path: config.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: dex
  namespace: oauth
spec:
  selector:
    app: dex
  ports:
    - name: http
      port: 5556
      targetPort: 5556
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dex
  namespace: oauth
  annotations:
    kubernetes.io/ingress.class: argon
spec:
  ingressClassName: argon
  rules:
    - host: dex.local
      http:
        paths:
          - path: /dex
            pathType: Prefix
            backend:
              service:
                name: dex
                port:
                  number: 5556
